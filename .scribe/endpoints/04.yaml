name: Orders
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/orders
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the orders.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'localhost:8000'
          access-control-allow-credentials: 'true'
          set-cookie: 'dayalog_session=bjl8RDnQOmfWKciNrpoeQvXhTkkyKhA09Xn8TdWk; expires=Tue, 01 Apr 2025 14:50:28 GMT; Max-Age=7200; path=/; secure; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/orders
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Add an order to the system'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      from:
        name: from
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      to:
        name: to
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: consequuntur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      patasente_purchase_order_id:
        name: patasente_purchase_order_id
        description: ''
        required: false
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      reference:
        name: reference
        description: ''
        required: true
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      notes:
        name: notes
        description: ''
        required: false
        example: eum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      from: enim
      to: consequuntur
      patasente_purchase_order_id: 11
      reference: vel
      notes: eum
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/orders/{id}'
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all details of an order'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: necessitatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: necessitatibus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'localhost:8000'
          access-control-allow-credentials: 'true'
          set-cookie: 'dayalog_session=hsIuLSJqGHv5eJMeAQuEFCk5CHqrDJGmdle4UdkX; expires=Tue, 01 Apr 2025 14:50:28 GMT; Max-Age=7200; path=/; secure; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/orders/{id}'
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Update order details.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: id
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/orders/{id}'
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete an order.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/orders/{order}/vehicle/{vehicle}'
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Attach Vehicle to an order'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      order:
        name: order
        description: 'The order.'
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      vehicle:
        name: vehicle
        description: 'The vehicle.'
        required: true
        example: animi
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      order: sit
      vehicle: animi
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/orders/{order}/vehicle/{vehicle}'
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Detach Vehicle from an order'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      order:
        name: order
        description: 'The order.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      vehicle:
        name: vehicle
        description: 'The vehicle.'
        required: true
        example: suscipit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      order: et
      vehicle: suscipit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/orders/{order}/status/{newStatus}'
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Change Order status'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      order:
        name: order
        description: 'The order.'
        required: true
        example: officiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      newStatus:
        name: newStatus
        description: ''
        required: true
        example: nam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      string:
        name: string
        description: "$newStatus The new status value (possible values: 'not_started', 'transit', 'reached', 'cancelled')."
        required: false
        example: cancelled
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      order: officiis
      newStatus: nam
      string: cancelled
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
