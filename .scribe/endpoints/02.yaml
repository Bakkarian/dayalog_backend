name: Drivers
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/drivers
    metadata:
      groupName: Drivers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the drivers.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'localhost:8000'
          access-control-allow-credentials: 'true'
          set-cookie: 'dayalog_session=4DPyWYTjzOvHEVYYdIttepADGrq62CWYqbLMC31R; expires=Tue, 01 Apr 2025 14:50:27 GMT; Max-Age=7200; path=/; secure; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/drivers
    metadata:
      groupName: Drivers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created drivers.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      business_name:
        name: business_name
        description: ''
        required: false
        example: velit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      license:
        name: license
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'This field is required when none of <code>email</code>, <code>patasente_id</code>, and <code>phone_number</code> are present.  The <code>id</code> of an existing record in the users table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: 'This field is required when <code>user_id</code> is <code>null</code>.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'This field is required when none of <code>user_id</code>, <code>patasente_id</code>, and <code>phone_number</code> are present.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      patasente_id:
        name: patasente_id
        description: 'This field is required when none of <code>user_id</code>, <code>email</code>, and <code>phone_number</code> are present.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      phone_number:
        name: phone_number
        description: 'This field is required when none of <code>user_id</code>, <code>email</code>, and <code>patasente_id</code> are present.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      business_name: velit
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/drivers/{id}'
    metadata:
      groupName: Drivers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the driver.'
        required: true
        example: hic
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: hic
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'localhost:8000'
          access-control-allow-credentials: 'true'
          set-cookie: 'dayalog_session=oVWBydt0BsqOfLpQdKSBnKobZADTNgHHyYDQOfAl; expires=Tue, 01 Apr 2025 14:50:28 GMT; Max-Age=7200; path=/; secure; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/drivers/{id}'
    metadata:
      groupName: Drivers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified driver.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the driver.'
        required: true
        example: occaecati
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: occaecati
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      driver:
        name: driver
        description: 'The <code>id</code> of an existing record in the drivers table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/drivers/{id}'
    metadata:
      groupName: Drivers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove driver from the system.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the driver.'
        required: true
        example: cumque
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: cumque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/drivers/{driver}/vehicles/{vehicle}'
    metadata:
      groupName: Drivers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Assign Vehicle to Driver'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      driver:
        name: driver
        description: 'The driver.'
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      vehicle:
        name: vehicle
        description: 'The vehicle.'
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      driver: sit
      vehicle: qui
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/drivers/{driver}/vehicles/{vehicle}'
    metadata:
      groupName: Drivers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove Vehicle from Driver'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      driver:
        name: driver
        description: 'The driver.'
        required: true
        example: libero
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      vehicle:
        name: vehicle
        description: 'The vehicle.'
        required: true
        example: recusandae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      driver: libero
      vehicle: recusandae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
